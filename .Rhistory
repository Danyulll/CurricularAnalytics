edge_list <- C$edge_list
node_list <- node_list[node_list$label %in% c("MATH 221","STAT 205","MATH 100", "MATH 101", "DATA 310", "STAT 203", "DATA 101"),]
node_list$term <- c(1,1,1,2,2,2,3)
node_list$id <- 1:length(node_list$id)
# 2 -> 1
# 8 -> 2
# 12 -> 3
# 17 -> 4
# 23 -> 5
# 1 -> 6
# 16 -> 7
# 3-> 5
# edge_list <- edge_list[edge_list$to %in% node_list$id & edge_list$from %in% node_list$id,]
edge_list <- data.frame(to = 1:6, from = 1:3)
edge_list$to <- c(2,3,7,7,4,5)
edge_list$from <- c(1,1,6,2,7,4)
# edge_list$to |> as.numeric(edge_list$to) -> edge_list$to
# edge_list$from |> as.numeric(edge_list$from) -> edge_list$from
C <- curriculum_graph_from_list(node_list[,1:3], edge_list)
plot_curriculum_graph(C)
library(CurricularAnalytics)
C <- curriculum_graph_from_csv("./vignettes/data/DS-Major-Max-2023-2024.csv")
node_list <- C$node_list
edge_list <- C$edge_list
node_list <- node_list[node_list$label %in% c("MATH 221","STAT 205","MATH 100", "MATH 101", "DATA 310", "STAT 203", "DATA 101"),]
node_list$term <- c(1,1,1,2,2,2,3)
node_list$id <- 1:length(node_list$id)
# 2 -> 1
# 8 -> 2
# 12 -> 3
# 17 -> 4
# 23 -> 5
# 1 -> 6
# 16 -> 7
# 3-> 5
# edge_list <- edge_list[edge_list$to %in% node_list$id & edge_list$from %in% node_list$id,]
edge_list <- data.frame(to = 1:6, from = 1:3)
edge_list$to <- c(2,3,7,7,4,4)
edge_list$from <- c(1,1,6,2,7,5)
# edge_list$to |> as.numeric(edge_list$to) -> edge_list$to
# edge_list$from |> as.numeric(edge_list$from) -> edge_list$from
C <- curriculum_graph_from_list(node_list[,1:3], edge_list)
plot_curriculum_graph(C)
C <- curriculum_graph_from_csv("./vignettes/data/DS-Major-Max-2023-2024.csv")
node_list <- C$node_list
edge_list <- C$edge_list
node_list <- node_list[node_list$label %in% c("MATH 221","STAT 205","MATH 100", "MATH 101", "DATA 310", "STAT 203", "DATA 101"),]
node_list$term <- c(1,1,1,2,2,2,3)
node_list$id <- 1:length(node_list$id)
node_list
library(CurricularAnalytics)
C <- curriculum_graph_from_csv("./vignettes/data/DS-Major-Max-2023-2024.csv")
node_list <- C$node_list
edge_list <- C$edge_list
node_list <- node_list[node_list$label %in% c("MATH 221","STAT 205","MATH 100", "MATH 101", "DATA 310", "STAT 203", "DATA 101"),]
node_list$term <- c(1,1,1,2,2,2,3)
node_list$id <- 1:length(node_list$id)
# 2 -> 1
# 8 -> 2
# 12 -> 3
# 17 -> 4
# 23 -> 5
# 1 -> 6
# 16 -> 7
# 3-> 5
# edge_list <- edge_list[edge_list$to %in% node_list$id & edge_list$from %in% node_list$id,]
edge_list <- data.frame(to = 1:6, from = 1:3)
edge_list$to <- c(2,3,7,7,4,5)
edge_list$from <- c(1,1,6,2,7,4)
edge_list$to |> as.numeric(edge_list$to) -> edge_list$to
edge_list$from |> as.numeric(edge_list$from) -> edge_list$from
C <- curriculum_graph_from_list(node_list[,1:3], edge_list)
plot_curriculum_graph(C)
library(CurricularAnalytics)
C <- curriculum_graph_from_csv("./vignettes/data/DS-Major-Max-2023-2024.csv")
node_list <- C$node_list
edge_list <- C$edge_list
node_list <- node_list[node_list$label %in% c("MATH 221","STAT 205","MATH 100", "MATH 101", "DATA 310", "STAT 203", "DATA 101"),]
node_list$term <- c(1,1,1,2,2,2,3)
node_list$id <- 1:length(node_list$id)
# 2 -> 1
# 8 -> 2
# 12 -> 3
# 17 -> 4
# 23 -> 5
# 1 -> 6
# 16 -> 7
# 3-> 5
# edge_list <- edge_list[edge_list$to %in% node_list$id & edge_list$from %in% node_list$id,]
edge_list <- data.frame(to = 1:6, from = 1:3)
edge_list$to <- c(2,3,7,7,4,5,7)
library(CurricularAnalytics)
C <- curriculum_graph_from_csv("./vignettes/data/DS-Major-Max-2023-2024.csv")
node_list <- C$node_list
edge_list <- C$edge_list
node_list <- node_list[node_list$label %in% c("MATH 221","STAT 205","MATH 100", "MATH 101", "DATA 310", "STAT 203", "DATA 101"),]
node_list$term <- c(1,1,1,2,2,2,3)
node_list$id <- 1:length(node_list$id)
# 2 -> 1
# 8 -> 2
# 12 -> 3
# 17 -> 4
# 23 -> 5
# 1 -> 6
# 16 -> 7
# 3-> 5
# edge_list <- edge_list[edge_list$to %in% node_list$id & edge_list$from %in% node_list$id,]
edge_list <- data.frame(to = 1:7, from = 1:3)
library(CurricularAnalytics)
C <- curriculum_graph_from_csv("./vignettes/data/DS-Major-Max-2023-2024.csv")
node_list <- C$node_list
edge_list <- C$edge_list
node_list <- node_list[node_list$label %in% c("MATH 221","STAT 205","MATH 100", "MATH 101", "DATA 310", "STAT 203", "DATA 101"),]
node_list$term <- c(1,1,1,2,2,2,3)
node_list$id <- 1:length(node_list$id)
# 2 -> 1
# 8 -> 2
# 12 -> 3
# 17 -> 4
# 23 -> 5
# 1 -> 6
# 16 -> 7
# 3-> 5
# edge_list <- edge_list[edge_list$to %in% node_list$id & edge_list$from %in% node_list$id,]
edge_list <- data.frame(to = 1:7, from = 1:7)
edge_list$to <- c(2,3,7,7,4,5,7)
edge_list$from <- c(1,1,6,2,7,4,4)
edge_list$to |> as.numeric(edge_list$to) -> edge_list$to
edge_list$from |> as.numeric(edge_list$from) -> edge_list$from
C <- curriculum_graph_from_list(node_list[,1:3], edge_list)
plot_curriculum_graph(C)
library(CurricularAnalytics)
C <- curriculum_graph_from_csv("./vignettes/data/DS-Major-Max-2023-2024.csv")
node_list <- C$node_list
edge_list <- C$edge_list
node_list <- node_list[node_list$label %in% c("MATH 221","STAT 205","MATH 100", "MATH 101", "DATA 310", "STAT 203", "DATA 101"),]
node_list$term <- c(1,1,1,2,2,2,3)
node_list$id <- 1:length(node_list$id)
# 2 -> 1
# 8 -> 2
# 12 -> 3
# 17 -> 4
# 23 -> 5
# 1 -> 6
# 16 -> 7
# 3-> 5
# edge_list <- edge_list[edge_list$to %in% node_list$id & edge_list$from %in% node_list$id,]
edge_list <- data.frame(to = 1:7, from = 1:7)
edge_list$to <- c(2,3,7,7,4,5)
library(CurricularAnalytics)
C <- curriculum_graph_from_csv("./vignettes/data/DS-Major-Max-2023-2024.csv")
node_list <- C$node_list
edge_list <- C$edge_list
node_list <- node_list[node_list$label %in% c("MATH 221","STAT 205","MATH 100", "MATH 101", "DATA 310", "STAT 203", "DATA 101"),]
node_list$term <- c(1,1,1,2,2,2,3)
node_list$id <- 1:length(node_list$id)
# 2 -> 1
# 8 -> 2
# 12 -> 3
# 17 -> 4
# 23 -> 5
# 1 -> 6
# 16 -> 7
# 3-> 5
# edge_list <- edge_list[edge_list$to %in% node_list$id & edge_list$from %in% node_list$id,]
edge_list <- data.frame(to = 1:6, from = 1:6)
edge_list$to <- c(2,3,7,7,4,5)
edge_list$from <- c(1,1,6,2,7,4)
edge_list$to |> as.numeric(edge_list$to) -> edge_list$to
edge_list$from |> as.numeric(edge_list$from) -> edge_list$from
C <- curriculum_graph_from_list(node_list[,1:3], edge_list)
plot_curriculum_graph(C)
library(CurricularAnalytics)
C <- curriculum_graph_from_csv("./vignettes/data/DS-Major-Max-2023-2024.csv")
node_list <- C$node_list
edge_list <- C$edge_list
node_list <- node_list[node_list$label %in% c("MATH 221","STAT 205","MATH 100", "MATH 101", "DATA 310", "STAT 203", "DATA 101"),]
node_list$term <- c(1,1,1,2,2,2,3)
node_list$id <- 1:length(node_list$id)
# 2 -> 1
# 8 -> 2
# 12 -> 3
# 17 -> 4
# 23 -> 5
# 1 -> 6
# 16 -> 7
# 3-> 5
# edge_list <- edge_list[edge_list$to %in% node_list$id & edge_list$from %in% node_list$id,]
edge_list <- data.frame(to = 1:6, from = 1:6)
edge_list$to <- c(2,3,7,7,7,5)
edge_list$from <- c(1,1,6,2,4,4)
edge_list$to |> as.numeric(edge_list$to) -> edge_list$to
edge_list$from |> as.numeric(edge_list$from) -> edge_list$from
C <- curriculum_graph_from_list(node_list[,1:3], edge_list)
plot_curriculum_graph(C)
library(CurricularAnalytics)
library(visNetwork)
library(htmlwidgets)
library(webshot)
install.packages("webshot")
library(visNetwork)
library(htmlwidgets)
library(webshot)
library(CurricularAnalytics)
library(visNetwork)
library(htmlwidgets)
library(webshot)
C <- curriculum_graph_from_csv("./vignettes/data/DS-Major-Max-2023-2024.csv")
node_list <- C$node_list
edge_list <- C$edge_list
node_list <- node_list[node_list$label %in% c("MATH 221","STAT 205","MATH 100", "MATH 101", "DATA 310", "STAT 203", "DATA 101"),]
node_list$term <- c(1,1,1,2,2,2,3)
node_list$id <- 1:length(node_list$id)
# 2 -> 1
# 8 -> 2
# 12 -> 3
# 17 -> 4
# 23 -> 5
# 1 -> 6
# 16 -> 7
# 3-> 5
# edge_list <- edge_list[edge_list$to %in% node_list$id & edge_list$from %in% node_list$id,]
edge_list <- data.frame(to = 1:6, from = 1:6)
edge_list$to <- c(2,3,7,7,7,5)
edge_list$from <- c(1,1,6,2,4,4)
edge_list$to |> as.numeric(edge_list$to) -> edge_list$to
edge_list$from |> as.numeric(edge_list$from) -> edge_list$from
C <- curriculum_graph_from_list(node_list[,1:3], edge_list)
# plot_curriculum_graph(C)
# Save the visNetwork graph as an HTML file
saveWidget(C, "network.html")
C
library(CurricularAnalytics)
library(visNetwork)
library(htmlwidgets)
library(webshot)
C <- curriculum_graph_from_csv("./vignettes/data/DS-Major-Max-2023-2024.csv")
node_list <- C$node_list
edge_list <- C$edge_list
node_list <- node_list[node_list$label %in% c("MATH 221","STAT 205","MATH 100", "MATH 101", "DATA 310", "STAT 203", "DATA 101"),]
node_list$term <- c(1,1,1,2,2,2,3)
node_list$id <- 1:length(node_list$id)
# 2 -> 1
# 8 -> 2
# 12 -> 3
# 17 -> 4
# 23 -> 5
# 1 -> 6
# 16 -> 7
# 3-> 5
# edge_list <- edge_list[edge_list$to %in% node_list$id & edge_list$from %in% node_list$id,]
edge_list <- data.frame(to = 1:6, from = 1:6)
edge_list$to <- c(2,3,7,7,7,5)
edge_list$from <- c(1,1,6,2,4,4)
edge_list$to |> as.numeric(edge_list$to) -> edge_list$to
edge_list$from |> as.numeric(edge_list$from) -> edge_list$from
C <- curriculum_graph_from_list(node_list[,1:3], edge_list)
# plot_curriculum_graph(C)
# Save the visNetwork graph as an HTML file
saveWidget(C$network, "network.html")
C$network
generate_coords <- function(curriculum_graph) {
coords <- matrix(ncol = 2)
old_term <- 1
idx <- -1
for (term in curriculum_graph$node_list$term) {
if (old_term != term) {
idx <- 0
old_term <- term
} else{
idx <- idx + 1
}
coords <- rbind(coords, c(term, idx))
}
coords <- stats::na.omit(coords)
return(coords)
}
C <- curriculum_graph_from_list(node_list[,1:3], edge_list)
network <- visNetwork(
C$node_list,
C$edge_list,
height = 500,
width = 500,
submain = paste(
"Total Structural Complexity:",
C$sc_total,
"Total Blocking Factor:",
C$bf_total,
"Total Delay Factor:",
C$df_total
)
) %>%
visEdges(arrows = "to") %>%
visIgraphLayout(layout = "layout.norm", layoutMatrix = generate_coords(C)) %>%
visEvents(
selectNode = "function(properties) {
alert(' sc: ' + this.body.data.nodes.get(properties.nodes[0]).sc + ' cf: ' + this.body.data.nodes.get(properties.nodes[0]).cf + ' bf: ' + this.body.data.nodes.get(properties.nodes[0]).bf + ' df: ' + this.body.data.nodes.get(properties.nodes[0]).df);}"
)
network
library(CurricularAnalytics)
library(visNetwork)
library(htmlwidgets)
library(webshot)
C <- curriculum_graph_from_csv("./vignettes/data/DS-Major-Max-2023-2024.csv")
node_list <- C$node_list
edge_list <- C$edge_list
node_list <- node_list[node_list$label %in% c("MATH 221","STAT 205","MATH 100", "MATH 101", "DATA 310", "STAT 203", "DATA 101"),]
node_list$term <- c(1,1,1,2,2,2,3)
node_list$id <- 1:length(node_list$id)
# 2 -> 1
# 8 -> 2
# 12 -> 3
# 17 -> 4
# 23 -> 5
# 1 -> 6
# 16 -> 7
# 3-> 5
# edge_list <- edge_list[edge_list$to %in% node_list$id & edge_list$from %in% node_list$id,]
edge_list <- data.frame(to = 1:6, from = 1:6)
edge_list$to <- c(2,3,7,7,7,5)
edge_list$from <- c(1,1,6,2,4,4)
edge_list$to |> as.numeric(edge_list$to) -> edge_list$to
edge_list$from |> as.numeric(edge_list$from) -> edge_list$from
C <- curriculum_graph_from_list(node_list[,1:3], edge_list)
network <- visNetwork(
C$node_list,
C$edge_list,
height = 500,
width = 500,
submain = paste(
"Total Structural Complexity:",
C$sc_total,
"Total Blocking Factor:",
C$bf_total,
"Total Delay Factor:",
C$df_total
)
) %>%
visEdges(arrows = "to") %>%
visIgraphLayout(layout = "layout.norm", layoutMatrix = generate_coords(C)) %>%
visEvents(
selectNode = "function(properties) {
alert(' sc: ' + this.body.data.nodes.get(properties.nodes[0]).sc + ' cf: ' + this.body.data.nodes.get(properties.nodes[0]).cf + ' bf: ' + this.body.data.nodes.get(properties.nodes[0]).bf + ' df: ' + this.body.data.nodes.get(properties.nodes[0]).df);}"
)
# plot_curriculum_graph(C)
# Save the visNetwork graph as an HTML file
saveWidget(C$network, "network.html")
library(CurricularAnalytics)
library(visNetwork)
library(htmlwidgets)
library(webshot)
C <- curriculum_graph_from_csv("./vignettes/data/DS-Major-Max-2023-2024.csv")
node_list <- C$node_list
edge_list <- C$edge_list
node_list <- node_list[node_list$label %in% c("MATH 221","STAT 205","MATH 100", "MATH 101", "DATA 310", "STAT 203", "DATA 101"),]
node_list$term <- c(1,1,1,2,2,2,3)
node_list$id <- 1:length(node_list$id)
# 2 -> 1
# 8 -> 2
# 12 -> 3
# 17 -> 4
# 23 -> 5
# 1 -> 6
# 16 -> 7
# 3-> 5
# edge_list <- edge_list[edge_list$to %in% node_list$id & edge_list$from %in% node_list$id,]
edge_list <- data.frame(to = 1:6, from = 1:6)
edge_list$to <- c(2,3,7,7,7,5)
edge_list$from <- c(1,1,6,2,4,4)
edge_list$to |> as.numeric(edge_list$to) -> edge_list$to
edge_list$from |> as.numeric(edge_list$from) -> edge_list$from
C <- curriculum_graph_from_list(node_list[,1:3], edge_list)
network <- visNetwork(
C$node_list,
C$edge_list,
height = 500,
width = 500,
submain = paste(
"Total Structural Complexity:",
C$sc_total,
"Total Blocking Factor:",
C$bf_total,
"Total Delay Factor:",
C$df_total
)
) %>%
visEdges(arrows = "to") %>%
visIgraphLayout(layout = "layout.norm", layoutMatrix = generate_coords(C)) %>%
visEvents(
selectNode = "function(properties) {
alert(' sc: ' + this.body.data.nodes.get(properties.nodes[0]).sc + ' cf: ' + this.body.data.nodes.get(properties.nodes[0]).cf + ' bf: ' + this.body.data.nodes.get(properties.nodes[0]).bf + ' df: ' + this.body.data.nodes.get(properties.nodes[0]).df);}"
)
# plot_curriculum_graph(C)
# Save the visNetwork graph as an HTML file
saveWidget(network, "network.html")
# Convert the HTML file to a JPG image
webshot("network.html", "network.jpg", vwidth = 800, vheight = 600)
webshot::install_phantomjs()
library(CurricularAnalytics)
library(visNetwork)
library(htmlwidgets)
library(webshot)
C <- curriculum_graph_from_csv("./vignettes/data/DS-Major-Max-2023-2024.csv")
node_list <- C$node_list
edge_list <- C$edge_list
node_list <- node_list[node_list$label %in% c("MATH 221","STAT 205","MATH 100", "MATH 101", "DATA 310", "STAT 203", "DATA 101"),]
node_list$term <- c(1,1,1,2,2,2,3)
node_list$id <- 1:length(node_list$id)
# 2 -> 1
# 8 -> 2
# 12 -> 3
# 17 -> 4
# 23 -> 5
# 1 -> 6
# 16 -> 7
# 3-> 5
# edge_list <- edge_list[edge_list$to %in% node_list$id & edge_list$from %in% node_list$id,]
edge_list <- data.frame(to = 1:6, from = 1:6)
edge_list$to <- c(2,3,7,7,7,5)
edge_list$from <- c(1,1,6,2,4,4)
edge_list$to |> as.numeric(edge_list$to) -> edge_list$to
edge_list$from |> as.numeric(edge_list$from) -> edge_list$from
C <- curriculum_graph_from_list(node_list[,1:3], edge_list)
network <- visNetwork(
C$node_list,
C$edge_list,
height = 500,
width = 500,
submain = paste(
"Total Structural Complexity:",
C$sc_total,
"Total Blocking Factor:",
C$bf_total,
"Total Delay Factor:",
C$df_total
)
) %>%
visEdges(arrows = "to") %>%
visIgraphLayout(layout = "layout.norm", layoutMatrix = generate_coords(C)) %>%
visEvents(
selectNode = "function(properties) {
alert(' sc: ' + this.body.data.nodes.get(properties.nodes[0]).sc + ' cf: ' + this.body.data.nodes.get(properties.nodes[0]).cf + ' bf: ' + this.body.data.nodes.get(properties.nodes[0]).bf + ' df: ' + this.body.data.nodes.get(properties.nodes[0]).df);}"
)
# plot_curriculum_graph(C)
# Save the visNetwork graph as an HTML file
saveWidget(network, "network.html")
# Convert the HTML file to a JPG image
webshot("network.html", "network.jpg", vwidth = 800, vheight = 600)
# Convert the HTML file to a JPG image
webshot("network.html", "network.jpg", vwidth = 800, vheight = 600, zoom = 3)
library(CurricularAnalytics)
library(visNetwork)
library(htmlwidgets)
library(webshot)
C <- curriculum_graph_from_csv("./vignettes/data/DS-Major-Max-2023-2024.csv")
node_list <- C$node_list
edge_list <- C$edge_list
node_list <- node_list[node_list$label %in% c("MATH 221","STAT 205","MATH 100", "MATH 101", "DATA 310", "STAT 203", "DATA 101"),]
node_list$term <- c(1,1,1,2,2,2,3)
node_list$id <- 1:length(node_list$id)
# 2 -> 1
# 8 -> 2
# 12 -> 3
# 17 -> 4
# 23 -> 5
# 1 -> 6
# 16 -> 7
# 3-> 5
# edge_list <- edge_list[edge_list$to %in% node_list$id & edge_list$from %in% node_list$id,]
edge_list <- data.frame(to = 1:6, from = 1:6)
edge_list$to <- c(2,3,7,7,7,5)
edge_list$from <- c(1,1,6,2,4,4)
edge_list$to |> as.numeric(edge_list$to) -> edge_list$to
edge_list$from |> as.numeric(edge_list$from) -> edge_list$from
C <- curriculum_graph_from_list(node_list[,1:3], edge_list)
network <- visNetwork(
C$node_list,
C$edge_list,
height = 500,
width = 500,
submain = paste(
"Total Structural Complexity:",
C$sc_total,
"Total Blocking Factor:",
C$bf_total,
"Total Delay Factor:",
C$df_total
)
) %>%
visEdges(arrows = "to") %>%
visIgraphLayout(layout = "layout.norm", layoutMatrix = generate_coords(C)) %>%
visEvents(
selectNode = "function(properties) {
alert(' sc: ' + this.body.data.nodes.get(properties.nodes[0]).sc + ' cf: ' + this.body.data.nodes.get(properties.nodes[0]).cf + ' bf: ' + this.body.data.nodes.get(properties.nodes[0]).bf + ' df: ' + this.body.data.nodes.get(properties.nodes[0]).df);}"
)
# plot_curriculum_graph(C)
# Save the visNetwork graph as an HTML file
# saveWidget(network, "network.html")
html_file <- "network.html"
saveWidget(network, html_file, selfcontained = TRUE)
# Add CSS to center the content in the HTML file
html <- readLines(html_file)
html <- sub("<head>", "<head><style>body { display: flex; justify-content: center; align-items: center; height: 100vh; margin: 0; }</style>", html)
writeLines(html, html_file)
# Convert the HTML file to a JPG image
webshot("network.html", "network.jpg", vwidth = 800, vheight = 600, zoom = 3)
?webshot
library(webshot)
# Define the URL of the running Shiny app
app_url <- "http://127.0.0.1:3557" # Replace XXXX with the port number your app is running on
# Take a screenshot and save it as an image file
webshot(url = app_url, file = "shiny_app_screenshot.png", vwidth = 1024, vheight = 768)
